{"ast":null,"code":"var _jsxFileName = \"/Users/nrodriguez/Documents/challenge-cor/src/components/FormTodo/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { func } from 'prop-types';\nimport { STATUS, PRIORITY } from '../../utils/constants';\nimport { createDropDown } from '../../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst namespace = 'formtodo';\n\nconst FormTodo = _ref => {\n  _s();\n\n  let {\n    handleAddItem\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [priority, setPriority] = useState('HIGH');\n  const [status, setStatus] = useState('NEW');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleAddItem({\n      id: (+new Date()).toString(),\n      title,\n      priority,\n      status,\n      description\n    });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setPriority('HIGH');\n    setStatus('NEW');\n    setDescription('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${namespace}`,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${namespace}__input--text`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          placeholder: 'Titulo',\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setPriority(e.target.value),\n          children: createDropDown(PRIORITY)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setStatus(e.target.value),\n          children: createDropDown(STATUS)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${namespace}__input--textarea`,\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"noter-text-area\",\n          name: \"textarea\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${namespace}__input--submit`,\n        disabled: title ? '' : 'disabled',\n        children: \"Crear tarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormTodo, \"yorXN/YN9fwfHcPiF7axw1P+Kdk=\");\n\n_c = FormTodo;\nFormTodo.propTypes = {\n  handleAddItem: func.isRequired\n};\nexport default FormTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTodo\");","map":{"version":3,"sources":["/Users/nrodriguez/Documents/challenge-cor/src/components/FormTodo/index.jsx"],"names":["React","useState","func","STATUS","PRIORITY","createDropDown","namespace","FormTodo","handleAddItem","title","setTitle","priority","setPriority","status","setStatus","description","setDescription","handleSubmit","e","preventDefault","id","Date","toString","resetForm","target","value","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { func } from 'prop-types'\n\nimport { STATUS, PRIORITY } from '../../utils/constants'\nimport { createDropDown } from '../../utils/utils'\n\nconst namespace = 'formtodo'\n\nconst FormTodo = ({ handleAddItem }) => {\n  const [title, setTitle] = useState('')\n  const [priority, setPriority] = useState('HIGH')\n  const [status, setStatus] = useState('NEW')\n  const [description, setDescription] = useState('')\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    handleAddItem({\n      id: (+new Date()).toString(),\n      title,\n      priority,\n      status,\n      description\n    })\n    resetForm()\n  }\n\n  const resetForm = () => {\n    setTitle('')\n    setPriority('HIGH')\n    setStatus('NEW')\n    setDescription('')\n  }\n  \n  return (\n    <div className={`${namespace}`}>\n      <form onSubmit={handleSubmit}>\n        <div className={`${namespace}__input--text`}>\n            <input\n              type=\"text\"\n              value={title}\n              placeholder={'Titulo'}\n              onChange={e => setTitle(e.target.value)}\n            />\n            <select onChange={e => setPriority(e.target.value)}>\n              { createDropDown(PRIORITY) }\n            </select>\n            <select onChange={e => setStatus(e.target.value)}>\n            { createDropDown(STATUS) }\n            </select>\n        </div>\n        <div className={`${namespace}__input--textarea`}>\n          <textarea id=\"noter-text-area\" name=\"textarea\" value={description} onChange={e => setDescription(e.target.value)} />\n        </div>\n        <button\n          className={`${namespace}__input--submit`}\n          disabled={title ? '' : 'disabled'}\n        >\n          Crear tarea\n        </button>\n      </form>\n    </div>\n  )\n}\n\nFormTodo.propTypes = {\n  handleAddItem: func.isRequired\n}\n\nexport default FormTodo\n"]},"metadata":{},"sourceType":"module"}