{"ast":null,"code":"var _jsxFileName = \"/Users/nrodriguez/Documents/challenge-cor/src/components/TaskList/index.jsx\";\nimport React from \"react\";\nimport TaskData from \"../TaskData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst namespace = 'tasklist';\n\nconst TaskList = _ref => {\n  let {\n    list,\n    setList,\n    priorityFilter\n  } = _ref;\n\n  const onChangeStatus = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    const updateList = list.map(item => ({ ...item,\n      done: item.id === name ? checked : item.done\n    }));\n    setList(updateList);\n  };\n\n  const todoItems = list.map(item => {\n    if (priorityFilter === item.priority) {\n      return /*#__PURE__*/_jsxDEV(TaskData, {\n        data: item,\n        onChange: onChangeStatus\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 52\n      }, this);\n    }\n\n    return null;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${namespace}`,\n    children: list.length ? todoItems : \"No tasks\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/nrodriguez/Documents/challenge-cor/src/components/TaskList/index.jsx"],"names":["React","TaskData","namespace","TaskList","list","setList","priorityFilter","onChangeStatus","e","name","checked","target","updateList","map","item","done","id","todoItems","priority","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,SAAS,GAAG,UAAlB;;AAEA,MAAMC,QAAQ,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAsC;;AACtD,QAAMC,cAAc,GAAGC,CAAC,IAAI;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoBF,CAAC,CAACG,MAA5B;AACA,UAAMC,UAAU,GAAGR,IAAI,CAACS,GAAL,CAASC,IAAI,KAAK,EACnC,GAAGA,IADgC;AAEnCC,MAAAA,IAAI,EAAED,IAAI,CAACE,EAAL,KAAYP,IAAZ,GAAmBC,OAAnB,GAA6BI,IAAI,CAACC;AAFL,KAAL,CAAb,CAAnB;AAIAV,IAAAA,OAAO,CAACO,UAAD,CAAP;AACD,GAPD;;AASA,QAAMK,SAAS,GAAGb,IAAI,CAACS,GAAL,CAASC,IAAI,IAAI;AACjC,QAAIR,cAAc,KAAKQ,IAAI,CAACI,QAA5B,EAAsC;AAAC,0BAAQ,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEJ,IAA9B;AAAoC,QAAA,QAAQ,EAAEP;AAA9C,SAAeO,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,cAAR;AAA0E;;AACjH,WAAO,IAAP;AACD,GAHiB,CAAlB;AAKA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEd,SAAU,EAA7B;AAAA,cACGE,IAAI,CAACe,MAAL,GAAcF,SAAd,GAA0B;AAD7B;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApBD;;KAAMd,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport TaskData from \"../TaskData\";\n\nconst namespace = 'tasklist';\n\nconst TaskList = ({ list, setList, priorityFilter }) => {\n  const onChangeStatus = e => {\n    const { name, checked } = e.target;\n    const updateList = list.map(item => ({\n      ...item,\n      done: item.id === name ? checked : item.done\n    }));\n    setList(updateList);\n  };\n\n  const todoItems = list.map(item => {\n    if (priorityFilter === item.priority) {return (<TaskData key={item.id} data={item} onChange={onChangeStatus} />)}\n    return null;\n  });\n\n  return (\n    <div className={`${namespace}`}>\n      {list.length ? todoItems : \"No tasks\"}\n    </div>\n  );\n};\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}