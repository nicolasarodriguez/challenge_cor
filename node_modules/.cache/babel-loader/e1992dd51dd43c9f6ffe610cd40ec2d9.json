{"ast":null,"code":"import _objectSpread from\"/Users/nrodriguez/Documents/challenge_cor/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import TaskData from'../TaskData';import EmptyState from'../EmptyState';import{jsx as _jsx}from\"react/jsx-runtime\";var namespace='tasklist';var TaskList=function TaskList(_ref){var list=_ref.list,setList=_ref.setList,priorityFilter=_ref.priorityFilter,statusFilter=_ref.statusFilter;var onChangeStatus=function onChangeStatus(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;var updateList=list.map(function(item){return _objectSpread(_objectSpread({},item),{},{status:item.id===name?value:item.done});});setList(updateList);};var todoItems=list.filter(function(item){return!(statusFilter!=='all'&&item.status!==statusFilter||priorityFilter!=='all'&&item.priority!==priorityFilter);}).map(function(filteredItem){return/*#__PURE__*/_jsx(TaskData,{data:filteredItem,onChange:onChangeStatus},filteredItem.id);});var renderResult=function renderResult(){if(list.length>0){if(todoItems.length>0){return todoItems;}else{return/*#__PURE__*/_jsx(EmptyState,{text:\"No se encontro ningun resultado\",image:\"no-results.jpg\"});}}else{return/*#__PURE__*/_jsx(EmptyState,{text:\"No hay tareas cargadas\",image:\"no-tasks.jpg\"});}};return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(namespace),children:renderResult()});};export default TaskList;","map":{"version":3,"sources":["/Users/nrodriguez/Documents/challenge_cor/src/components/TaskList/index.jsx"],"names":["React","TaskData","EmptyState","namespace","TaskList","list","setList","priorityFilter","statusFilter","onChangeStatus","e","target","name","value","updateList","map","item","status","id","done","todoItems","filter","priority","filteredItem","renderResult","length"],"mappings":"8HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,UAAlB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAqD,IAAlDC,CAAAA,IAAkD,MAAlDA,IAAkD,CAA5CC,OAA4C,MAA5CA,OAA4C,CAAnCC,cAAmC,MAAnCA,cAAmC,CAAnBC,YAAmB,MAAnBA,YAAmB,CACpE,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,CAAC,CAAI,CAC1B,cAAwBA,CAAC,CAACC,MAA1B,CAAQC,IAAR,WAAQA,IAAR,CAAcC,KAAd,WAAcA,KAAd,CACA,GAAMC,CAAAA,UAAU,CAAGT,IAAI,CAACU,GAAL,CAAS,SAAAC,IAAI,wCAC3BA,IAD2B,MAE9BC,MAAM,CAAED,IAAI,CAACE,EAAL,GAAYN,IAAZ,CAAmBC,KAAnB,CAA2BG,IAAI,CAACG,IAFV,IAAb,CAAnB,CAIAb,OAAO,CAACQ,UAAD,CAAP,CACD,CAPD,CASA,GAAMM,CAAAA,SAAS,CAAGf,IAAI,CAACgB,MAAL,CAAY,SAAAL,IAAI,QAChC,EAAGR,YAAY,GAAK,KAAjB,EAA0BQ,IAAI,CAACC,MAAL,GAAgBT,YAA3C,EACDD,cAAc,GAAK,KAAnB,EAA4BS,IAAI,CAACM,QAAL,GAAkBf,cAD/C,CADgC,EAAhB,EAGfQ,GAHe,CAGX,SAAAQ,YAAY,CAAI,CACrB,mBAAQ,KAAC,QAAD,EAAgC,IAAI,CAAEA,YAAtC,CAAoD,QAAQ,CAAEd,cAA9D,EAAec,YAAY,CAACL,EAA5B,CAAR,CACD,CALiB,CAAlB,CAOA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAInB,IAAI,CAACoB,MAAL,CAAc,CAAlB,CAAqB,CACnB,GAAIL,SAAS,CAACK,MAAV,CAAmB,CAAvB,CAA0B,CACxB,MAAOL,CAAAA,SAAP,CACD,CAFD,IAEO,CACL,mBAAQ,KAAC,UAAD,EAAY,IAAI,CAAC,iCAAjB,CAAmD,KAAK,CAAC,gBAAzD,EAAR,CACD,CACF,CAND,IAMO,CACL,mBAAQ,KAAC,UAAD,EAAY,IAAI,CAAC,wBAAjB,CAA0C,KAAK,CAAC,cAAhD,EAAR,CACD,CACF,CAVD,CAYA,mBACE,YAAK,SAAS,WAAKjB,SAAL,CAAd,UACGqB,YAAY,EADf,EADF,CAKD,CAlCD,CA2CA,cAAepB,CAAAA,QAAf","sourcesContent":["import React from 'react'\nimport { array, func, string } from 'prop-types'\n\nimport TaskData from '../TaskData'\nimport EmptyState from '../EmptyState'\n\nconst namespace = 'tasklist'\n\nconst TaskList = ({ list, setList, priorityFilter, statusFilter }) => {\n  const onChangeStatus = e => {\n    const { name, value } = e.target\n    const updateList = list.map(item => ({\n      ...item,\n      status: item.id === name ? value : item.done\n    }))\n    setList(updateList)\n  }\n\n  const todoItems = list.filter(item => (\n    !((statusFilter !== 'all' && item.status !== statusFilter) ||\n    (priorityFilter !== 'all' && item.priority !== priorityFilter))\n  )).map(filteredItem => {\n    return (<TaskData key={filteredItem.id} data={filteredItem} onChange={onChangeStatus} />)\n  })\n\n  const renderResult = () => {\n    if (list.length > 0) {\n      if (todoItems.length > 0) {\n        return todoItems\n      } else {\n        return (<EmptyState text=\"No se encontro ningun resultado\" image=\"no-results.jpg\" />)\n      }\n    } else {\n      return (<EmptyState text=\"No hay tareas cargadas\" image=\"no-tasks.jpg\" />)\n    }\n  }\n\n  return (\n    <div className={`${namespace}`}>\n      {renderResult()}\n    </div>\n  )\n}\n\nTaskList.propTypes = {\n  list: array.isRequired,\n  setList: func.isRequired,\n  priorityFilter: string.isRequired,\n  statusFilter: string.isRequired\n}\n\nexport default TaskList\n"]},"metadata":{},"sourceType":"module"}