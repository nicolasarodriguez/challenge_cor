{"ast":null,"code":"var _jsxFileName = \"/Users/nrodriguez/Documents/challenge_cor/src/components/TaskList/index.jsx\";\nimport React from 'react';\nimport { array, func, string } from 'prop-types';\nimport TaskData from '../TaskData';\nimport EmptyState from '../EmptyState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst namespace = 'tasklist';\n\nconst TaskList = _ref => {\n  let {\n    list,\n    setList,\n    priorityFilter,\n    statusFilter\n  } = _ref;\n\n  const onChangePriority = (event, id) => {\n    const {\n      value\n    } = event.target;\n    const objIndex = list.findIndex(obj => obj.id === id);\n    list[objIndex].priority = value;\n    setList(list);\n  };\n\n  const onChangeStatus = (event, id) => {\n    const {\n      value\n    } = event.target;\n    const objIndex = list.findIndex(obj => obj.id === id);\n    list[objIndex].status = value;\n    setList(list);\n  };\n\n  const todoItems = list.filter(item => !(statusFilter !== 'all' && item.status !== statusFilter || priorityFilter !== 'all' && item.priority !== priorityFilter)).map(filteredItem => {\n    return /*#__PURE__*/_jsxDEV(TaskData, {\n      data: filteredItem,\n      onChangePriority: onChangePriority,\n      onChangeStatus: onChangeStatus\n    }, filteredItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  });\n\n  const renderResult = () => {\n    if (list.length > 0) {\n      if (todoItems.length > 0) {\n        return todoItems;\n      } else {\n        return /*#__PURE__*/_jsxDEV(EmptyState, {\n          text: \"No se encontro ningun resultado\",\n          image: \"no-results.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(EmptyState, {\n        text: \"No hay tareas cargadas\",\n        image: \"no-tasks.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${namespace}`,\n    children: renderResult()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TaskList;\nTaskList.propTypes = {\n  list: array.isRequired,\n  setList: func.isRequired,\n  priorityFilter: string.isRequired,\n  statusFilter: string.isRequired\n};\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/nrodriguez/Documents/challenge_cor/src/components/TaskList/index.jsx"],"names":["React","array","func","string","TaskData","EmptyState","namespace","TaskList","list","setList","priorityFilter","statusFilter","onChangePriority","event","id","value","target","objIndex","findIndex","obj","priority","onChangeStatus","status","todoItems","filter","item","map","filteredItem","renderResult","length","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,YAApC;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,SAAS,GAAG,UAAlB;;AAEA,MAAMC,QAAQ,GAAG,QAAqD;AAAA,MAApD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA;AAAjC,GAAoD;;AACpE,QAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AACtC,UAAM;AAAEC,MAAAA;AAAF,QAAYF,KAAK,CAACG,MAAxB;AACA,UAAMC,QAAQ,GAAGT,IAAI,CAACU,SAAL,CAAgBC,GAAG,IAAIA,GAAG,CAACL,EAAJ,KAAWA,EAAlC,CAAjB;AACAN,IAAAA,IAAI,CAACS,QAAD,CAAJ,CAAeG,QAAf,GAA0BL,KAA1B;AACAN,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GALD;;AAOA,QAAMa,cAAc,GAAG,CAACR,KAAD,EAAQC,EAAR,KAAe;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAYF,KAAK,CAACG,MAAxB;AACA,UAAMC,QAAQ,GAAGT,IAAI,CAACU,SAAL,CAAgBC,GAAG,IAAIA,GAAG,CAACL,EAAJ,KAAWA,EAAlC,CAAjB;AACAN,IAAAA,IAAI,CAACS,QAAD,CAAJ,CAAeK,MAAf,GAAwBP,KAAxB;AACAN,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GALD;;AAOA,QAAMe,SAAS,GAAGf,IAAI,CAACgB,MAAL,CAAYC,IAAI,IAChC,EAAGd,YAAY,KAAK,KAAjB,IAA0Bc,IAAI,CAACH,MAAL,KAAgBX,YAA3C,IACDD,cAAc,KAAK,KAAnB,IAA4Be,IAAI,CAACL,QAAL,KAAkBV,cAD/C,CADgB,EAGfgB,GAHe,CAGXC,YAAY,IAAI;AACrB,wBACE,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,YAFR;AAGE,MAAA,gBAAgB,EAAEf,gBAHpB;AAIE,MAAA,cAAc,EAAES;AAJlB,OACOM,YAAY,CAACb,EADpB;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAZiB,CAAlB;;AAcA,QAAMc,YAAY,GAAG,MAAM;AACzB,QAAIpB,IAAI,CAACqB,MAAL,GAAc,CAAlB,EAAqB;AACnB,UAAIN,SAAS,CAACM,MAAV,GAAmB,CAAvB,EAA0B;AACxB,eAAON,SAAP;AACD,OAFD,MAEO;AACL,4BAAQ,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,iCAAjB;AAAmD,UAAA,KAAK,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAAR;AACD;AACF,KAND,MAMO;AACL,0BAAQ,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,wBAAjB;AAA0C,QAAA,KAAK,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEjB,SAAU,EAA7B;AAAA,cACGsB,YAAY;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9CD;;KAAMrB,Q;AAgDNA,QAAQ,CAACuB,SAAT,GAAqB;AACnBtB,EAAAA,IAAI,EAAEP,KAAK,CAAC8B,UADO;AAEnBtB,EAAAA,OAAO,EAAEP,IAAI,CAAC6B,UAFK;AAGnBrB,EAAAA,cAAc,EAAEP,MAAM,CAAC4B,UAHJ;AAInBpB,EAAAA,YAAY,EAAER,MAAM,CAAC4B;AAJF,CAArB;AAOA,eAAexB,QAAf","sourcesContent":["import React from 'react'\nimport { array, func, string } from 'prop-types'\n\nimport TaskData from '../TaskData'\nimport EmptyState from '../EmptyState'\n\nconst namespace = 'tasklist'\n\nconst TaskList = ({ list, setList, priorityFilter, statusFilter }) => {\n  const onChangePriority = (event, id) => {\n    const { value } = event.target\n    const objIndex = list.findIndex((obj => obj.id === id));\n    list[objIndex].priority = value\n    setList(list)\n  }\n\n  const onChangeStatus = (event, id) => {\n    const { value } = event.target\n    const objIndex = list.findIndex((obj => obj.id === id));\n    list[objIndex].status = value\n    setList(list)\n  }\n\n  const todoItems = list.filter(item => (\n    !((statusFilter !== 'all' && item.status !== statusFilter) ||\n    (priorityFilter !== 'all' && item.priority !== priorityFilter))\n  )).map(filteredItem => {\n    return (\n      <TaskData\n        key={filteredItem.id}\n        data={filteredItem}\n        onChangePriority={onChangePriority}\n        onChangeStatus={onChangeStatus}\n      />\n    )\n  })\n\n  const renderResult = () => {\n    if (list.length > 0) {\n      if (todoItems.length > 0) {\n        return todoItems\n      } else {\n        return (<EmptyState text=\"No se encontro ningun resultado\" image=\"no-results.jpg\" />)\n      }\n    } else {\n      return (<EmptyState text=\"No hay tareas cargadas\" image=\"no-tasks.jpg\" />)\n    }\n  }\n\n  return (\n    <div className={`${namespace}`}>\n      {renderResult()}\n    </div>\n  )\n}\n\nTaskList.propTypes = {\n  list: array.isRequired,\n  setList: func.isRequired,\n  priorityFilter: string.isRequired,\n  statusFilter: string.isRequired\n}\n\nexport default TaskList\n"]},"metadata":{},"sourceType":"module"}